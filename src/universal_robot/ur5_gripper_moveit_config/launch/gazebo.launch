<?xml version="1.0"?>
<launch>
  <!-- Gazebo 选项 -->
  <arg name="gazebo_gui" default="true" doc="Start Gazebo GUI"/>  <!-- 启动 Gazebo 图形界面 -->
  <arg name="paused" default="false" doc="Start Gazebo paused"/>  <!-- 启动 Gazebo 时暂停 -->
  <arg name="world_name" default="worlds/empty.world" doc="Gazebo world file"/>  <!-- Gazebo 世界文件 -->
  <arg name="world_pose" default="-x 0 -y 0 -z 0 -R 0 -P 0 -Y 0" doc="Pose to spawn the robot at"/>  <!-- 生成机器人的位置姿态 -->
  <!-- 机器人的初始关节配置 -->  
  <arg name="initial_joint_positions" default=" -J elbow_joint 0 -J robotiq_85_left_knuckle_joint 0 -J shoulder_lift_joint -1.5708 -J shoulder_pan_joint 0 -J wrist_1_joint 0 -J wrist_2_joint 0 -J wrist_3_joint 0" doc="Initial joint configuration of the robot"/>

  <!-- 启动 Gazebo 时暂停，以允许控制器获取初始姿态 -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch" pass_all_args="true">
    <arg name="paused" value="true"/>
    <arg name="gui" value="true"/>
  </include>

  <!-- 在参数服务器上设置机器人的 URDF -->
  <param name="robot_description" textfile="$(find ur5_gripper_moveit_config)/config/gazebo_ur5_robot.urdf" />

  <!-- 加载机器人模型后继续仿真 -->
  <arg name="unpause" value="$(eval '' if arg('paused') else '-unpause')" />

  <!-- 在 Gazebo 中生成机器人 -->
  <node name="spawn_gazebo_model" pkg="gazebo_ros" type="spawn_model" args="-urdf -param robot_description -model robot $(arg unpause) $(arg world_pose) $(arg initial_joint_positions)"
    respawn="false" output="screen" />

  <!-- 将控制器参数加载到参数服务器 -->
  <rosparam file="$(find ur5_gripper_moveit_config)/config/gazebo_controllers.yaml" />
  <include file="$(dirname)/ros_controllers.launch"/>

  <!-- 生成 Gazebo ROS 控制器 -->
  <node name="gazebo_controller_spawner" pkg="controller_manager" type="spawner" respawn="false" output="screen" args="joint_state_controller" />

  <!-- 根据发布的关节状态，为机器人链条发布 tf -->
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" respawn="true" output="screen" />
</launch>
